declare -r base="/home/teszt/public_html/tester/Back"
declare -r work=${base}"/work"

declare -r target="/home/teszt/public_html/tester/Front/work/fromBack"
declare -r cpMethod="cp"

declare tarF subId problemId userId langName

function off {
  if test -e pid/${1}
  then
  	kill -9 $(cat pid/${1})
  	rm -f pid/${1}
  fi
}


function on {
  if ! test -e pid/${1}
  then
  	rm -f log/${1}
  	touch log/${1}
  	nohup ./${1} 1>> log/${1} 2>&1 &
	  echo "$!" > pid/${1}
  fi
}


function preTester {
  rm -rf "testBed/"*
  tar -xf ${tarF} -C testBed/
  mv ${tarF} ${base}"/sub/pre"
  cd testBed
  source data
  ln -s ${base}"/problem/"${problemId}"/io"
  if test -e ${base}"/problem/"${problemId}"/checker"
  then
    cp ${base}"/problem/"${problemId}"/checker/checker" .
  else
    cp ${base}"/problem/checker/default/checker" .
  fi
  if test -e ${base}"/problem/"${problemId}"/limit"
  then
    cp ${base}"/problem/"${problemId}"/limit" .
  else
    cp ${base}"/problem/limit/default/limit" .
  fi
  cd ${work}
}

function compile {
  cd testBed
  declare compC="_"
  declare -i xCode
  while true
  do
    if [ ${langName} = "c" ]
    then
      source ${base}/lang/c/compC
      break 
    fi

    if [ ${langName} = "cc" ]
    then
      source ${base}/lang/cc/compC
      break
    fi

    if [ ${langName} = "pas" ]
    then
      source ${base}/lang/pas/compC
      break
    fi
    break
  done

  if [ "${compC}" = "_" ]
  then
    xCode=-1
  else
    (${compC});xCode=$?
  fi
  cd ${work}
  return ${xCode}
}

function postTester {
  return 0
}

