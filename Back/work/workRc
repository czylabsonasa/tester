declare -r base="/home/teszt/public_html/tester/Back"
declare -r work=${base}"/work"

declare -r target="/home/teszt/public_html/tester/Front/work/fromBack"
declare -r cpMethod="cp"

declare tarF 
declare subId 
declare problemId 
declare problemName 
declare userId 
declare userName 
declare langName 
declare xCode 

declare verdict="_"

function off {
  if test -e pid/${1}
  then
  	kill -9 $(cat pid/${1})
  	rm -f pid/${1}
  fi
}


function on {
  if ! test -e pid/${1}
  then
  	rm -f log/${1}
  	touch log/${1}
  	nohup ./${1} 1>> log/${1} 2>&1 &
	  echo "$!" > pid/${1}
  fi
}


function pre {
echo "tarF="${tarF}
  verdict="IE"
  cp "fromFront/"${tarF} ${base}"/sub/pre"
  rm -rf testBed/*
  mv "fromFront/"${tarF} testBed
  cd testBed
  subId=$(echo ${tarF}|cut -d'_' -f1)  
  tar xf ${tarF}
  mv ${subId}_data data
  mv ${subId}_src src
  source data
#
  echo "subId="${subId} 
  cp data ${subId}"_res"
  echo "procBeg="\"$(date)\" >> ${subId}"_res"
  ln -s ${base}"/problem/"${problemId}"/io"
  if test -e ${base}"/problem/"${problemId}"/checker"
  then
    cp ${base}"/problem/"${problemId}"/checker/checker" .
  else
    cp ${base}"/problem/checker/default/checker" .
  fi
  if test -e ${base}"/problem/"${problemId}"/limit"
  then
    cp ${base}"/problem/"${problemId}"/limit" .
  else
    cp ${base}"/problem/limit/default/limit" .
  fi
  
  verdict="_"
}

function compile {
  cd testBed
  declare compC="_"
  confP=${base}"/lang/"${langName}"/config"
  if test -e ${confP}
  then
    source ${confP}
  fi

  if [ "${compC}" = "_" ]
  then
    xCode=-1
  else
    (${compC});xCode=$?
  fi
  if [ ${xCode} != 0 ]
  then
    verdict="CE"
    echo 'verdict="CE"' >> ${subId}"_res"
  fi

  return ${xCode}
}

function run {
  cd testBed
  source limit
  nIO=$(ls ${io}/in* | wc -w)
  verdict="_"
  for n in $(seq 1 ${nIO});
  do
    echo "uTime="${uTime}
    (ulimit -t ${uTime} -m ${uMem} -v ${uVirt} -n ${uFd}; ./actX < "io/in"${n} > out); xCode=$?

    if test ${xCode} -gt 0
    then
      echo in${n}"=fail" >> ${subId}"_res"
      if test ${xCode} -eq 137
      then
        verdict="TE"
        echo 'verdict="TE"' >> ${subId}"_res"
      else
        verdict="RE"
        echo 'verdict="RE"' >> ${subId}"_res"
      fi    
      break
    fi



    (./checker "io/out"${n} out); xCode=$?

    if test ${xCode} -gt 0 ; then
      echo in${n}"=fail" >> ${subId}"_res"
      verdict="WA"
      echo 'verdict="WA"' >> ${subId}"_res"
      break
    fi
    echo in${n}"=ok" >> ${subId}"_res"
  done

  if [ ${verdict} = "_" ]
  then
      verdict="AC"
      echo 'verdict="AC"' >> ${subId}"_res"
  fi

  return ${xCode}
}


function post {
  cd testBed
  cp ${subId}"_res" ${base}"/sub/res"
  cp ${subId}"_res" ${work}"/toFront"
  echo "procEnd="\"$(date)\" >> ${subId}"_res"
}
