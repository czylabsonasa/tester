#!/bin/bash

source base
source def

declare -i xCode

declare -i uTime=3
declare -i uMem=30000
declare -i uVirt=30000
declare -i uFd=13

declare cCmd
declare lName
declare pName
declare -r fName=${1}
declare resName="_"


declare -i nIO
declare -i n

cd ${testBed}

pName=$(echo ${fName} | cut -d'_' -f 4)
declare -r io=${problem}"/"${pName}"/io"

lName=$( echo ${fName} | cut -d'_' -f 3)

if [ ${lName} = "c" ] ; then
	cCmd="gcc -x c -ansi -lm -o act ${fName}"
fi

if [ ${lName} = "cc" ] ; then
 	cCmd="g++ -x c++ -std=c++11 -o act ${fName}"
fi


if [ ${lName} = "pas" ] ; then
 	cCmd="fpc ${fName} -o act"
fi


${cCmd} ; xCode=$?

if test ${xCode} -gt 0 ; 
then 
  cp ${fName} ${sub}"/"${fName}"_CE"
  touch ${toFront}"/"${fName}"_CE"
  exit 1
fi



ulimit -t ${uTime} -m ${uMem} -v ${uVirt} -n ${uFd} 

nIO=$(ls ${io}/in* | wc -w)
for n in $(seq 1 ${nIO});
do
  ./act < ${ioD}"/in"${n} > ./act.out; xCode=$?

  if test ${xCode} -gt 0 ; 
  then
    if test ${xCode} -eq 137 ; 
    then
      resName=${fName}"_TE"
    else
      resName=${fName}"_RE"
    fi    
    break
  fi

  ./checker ${io}"/out"${n} act.out; xCode=$?

  if test ${xCode} -gt 0 ; then
      resName=${fName}"_WA"
    break
  fi
done

if [ ${resName} = "_" ] ;
then
  resName=${fName}"_AC"
fi

cp ${fName} ${sub}"/"${resName}
touch ${toFront}"/"${resName}

exit 0
